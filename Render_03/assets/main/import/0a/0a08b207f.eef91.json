[1,["7dj5uJT9FMn6OrOOx83tfK@f9941","0bG/WHNYJFq7eeeNs7az9L@6c48a","0bG/WHNYJFq7eeeNs7az9L@f9941","40wwxiXMtHCKIe6a8whFBK","9aNxBfb7FDUKV6JSi+UvU/@f9941","aeNdXZ2olDxLSRiKKqx8J7@f9941","70xyCbD39OM6MnuMflXNqn","7dj5uJT9FMn6OrOOx83tfK@6c48a","9aNxBfb7FDUKV6JSi+UvU/@6c48a","aeNdXZ2olDxLSRiKKqx8J7@6c48a"],["node","_spriteFrame","_textureSource","_cameraComponent","scene","_parent","_customMaterial","_effectAsset"],[["cc.Node",["_name","_layer","_id","_components","_parent","_lpos","_children","_lscale"],0,9,1,5,2,5],"cc.SpriteFrame",["cc.Sprite",["_sizeMode","node","_spriteFrame","_color","_customMaterial"],2,1,6,5,6],["cc.UITransform",["node","_contentSize"],3,1,5],["cc.Widget",["_alignFlags","_top","_bottom","_left","_originalWidth","node"],-2,1],["cc.Camera",["_projection","_priority","_orthoHeight","_near","_far","_visibility","_clearFlags","node","_color"],-4,1,5],["cc.SceneAsset",["_name"],2],["cc.Node",["_name","_parent","_components","_lpos"],2,1,2,5],["cc.Canvas",["node","_cameraComponent"],3,1,1],["44f140etDBICo4UVu/8a9j3",["node"],3,1],["cc.Scene",["_name","_children","_globals"],2,2,4],["cc.SceneGlobals",["ambient","shadows","_skybox","fog","octree"],3,4,4,4,4,4],["cc.AmbientInfo",["_skyColorHDR","_groundAlbedoHDR"],3,5,5],["cc.ShadowsInfo",["_shadowColor","_size"],3,5,5],["cc.SkyboxInfo",[],3],["cc.FogInfo",[],3],["cc.OctreeInfo",[],3],["cc.Material",["_name","_props","_states","_defines"],-1],["cc.EffectAsset",["_name","combinations","shaders","techniques"],-1]],[[3,0,1,1],[0,0,1,4,3,3],[2,1,2,1],[6,0,2],[0,0,1,2,6,3,5,4],[0,0,1,4,6,3,5,7,3],[0,0,1,4,3,7,3],[0,0,1,4,6,3,3],[0,0,1,4,3,5,7,3],[0,0,1,4,3,5,3],[7,0,1,2,3,2],[3,0,1],[8,0,1,1],[4,0,1,2,5,4],[4,0,3,4,5,4],[9,0,1],[2,0,1,3,4,2,2],[2,0,1,3,2,2],[2,0,1,2,2],[10,0,1,2,2],[11,0,1,2,3,4,1],[12,0,1,1],[13,0,1,1],[14,1],[15,1],[16,1],[5,0,1,2,3,4,5,7,8,7],[5,0,1,2,3,4,6,5,7,8,8],[17,0,1,2,3,5],[18,0,1,2,3,5]],[[[{"name":"IMG_5840","rect":{"x":0,"y":0,"width":1080,"height":2340},"offset":{"x":0,"y":0},"originalSize":{"width":1080,"height":2340},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-540,-1170,0,540,-1170,0,-540,1170,0,540,1170,0],"indexes":[0,1,2,2,1,3],"uv":[0,2340,1080,2340,0,0,1080,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-540,"y":-1170,"z":0},"maxPos":{"x":540,"y":1170,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[1],0,[0],[2],[1]],[[[3,"r_main"],[4,"Canvas",33554432,"beI88Z2HpFELqR4T5EMHpg",[-6,-7,-8,-9,-10,-11],[[0,-1,[5,720,1280]],[12,-3,-2],[13,45,5.684341886080802e-14,5.684341886080802e-14,-4],[15,-5]],[1,360,640,0]],[5,"show",33554432,1,[-14,-15],[[0,-12,[5,720,1280]],[14,33,465.408,300,-13]],[1,252,448,0],[1,0.3,0.3,1]],[6,"bg",33554432,1,[[0,-16,[5,1080,2340]],[2,-17,0]],[1,0.8,0.8,1]],[1,"front",33554432,1,[[0,-18,[5,720,1280]],[16,0,-19,[4,2929262847],1,2]]],[1,"show_bg",33554432,2,[[0,-20,[5,720,1280]],[17,0,-21,[4,4278190080],3]]],[1,"show_texture",33554432,2,[[0,-22,[5,720,1280]],[18,0,-23,4]]],[7,"Pen_Texture",1,1,[-25],[[11,-24]]],[8,"pen",1,7,[[0,-26,[5,251,240]],[2,-27,5]],[1,-834.546,-767.46,0],[1,0.4,0.4,1]],[19,"r_main",[1],[20,[21,[2,0,0,0,0.520833125],[2,0,0,0,0]],[22,[4,4283190348],[0,512,512]],[23],[24],[25]]],[10,"Camera",1,[-28],[1,0,0,1000]],[26,0,1073741824,640,0,2000,41943040,10,[4,4278190080]],[9,"Camera_Pen",33554432,1,[[27,0,1073741824,640,0,2000,0,1,-29,[4,4278190080]]],[1,0,0,1000]]],0,[0,0,1,0,3,11,0,0,1,0,0,1,0,0,1,0,-1,10,0,-2,12,0,-3,3,0,-4,4,0,-5,2,0,-6,7,0,0,2,0,0,2,0,-1,5,0,-2,6,0,0,3,0,0,3,0,0,4,0,0,4,0,0,5,0,0,5,0,0,6,0,0,6,0,0,7,0,-1,8,0,0,8,0,0,8,0,-1,11,0,0,12,0,4,9,1,5,9,29],[0,0,0,0,0,0],[1,6,1,1,1,1],[2,3,4,0,0,5]],[[[28,"paint",[{}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true}]]],0,0,[0],[7],[6]],[[[29,"../effect/paint",[{}],[{"hash":1948851708,"name":"../effect/paint|sprite-vs:vert|sprite-fs:frag","blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplerTextures":[{"name":"mask_texture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_debug_view_mode;\n  mediump vec4 cc_debug_view_composite_pack_1;\n  mediump vec4 cc_debug_view_composite_pack_2;\n  mediump vec4 cc_debug_view_composite_pack_3;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n  };\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183f\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define CC_LIGHTMAP_DISABLED 0\n  #define CC_LIGHTMAP_ALL_IN_ONE 1\n  #define CC_LIGHTMAP_CC_LIGHTMAP_INDIRECT_OCCLUSION 2\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n  layout(std140) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nuniform sampler2D mask_texture;\nin vec4 color;\n#if USE_TEXTURE\n  in vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  vec4 mask_o = texture(mask_texture, uv0);\n  if(mask_o.r > .9) discard;\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n    #if IS_GRAY\n      float gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\n      o.r = o.g = o.b = gray;\n    #endif\n  #endif\n  o *= color;\n  ALPHA_TEST(o);\n  if(mask_o.a > .1) o = vec4(0,0,0,1);\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\n#if USE_LOCAL\n  uniform highp mat4 cc_matWorld;\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183f\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define CC_LIGHTMAP_DISABLED 0\n  #define CC_LIGHTMAP_ALL_IN_ONE 1\n  #define CC_LIGHTMAP_CC_LIGHTMAP_INDIRECT_OCCLUSION 2\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture2D(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n      uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nuniform sampler2D mask_texture;\nvarying vec4 color;\n#if USE_TEXTURE\n  varying vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  vec4 mask_o = texture2D(mask_texture, uv0);\n  if(mask_o.r > .9) discard;\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n    #if IS_GRAY\n      float gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\n      o.r = o.g = o.b = gray;\n    #endif\n  #endif\n  o *= color;\n  ALPHA_TEST(o);\n  if(mask_o.a > .1) o = vec4(0,0,0,1);\n  return o;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":["USE_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":54,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":1}},"defines":[{"name":"USE_LOCAL","type":"boolean"},{"name":"SAMPLE_FROM_RT","type":"boolean"},{"name":"USE_PIXEL_ALIGNMENT","type":"boolean"},{"name":"CC_USE_EMBEDDED_ALPHA","type":"boolean"},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"USE_TEXTURE","type":"boolean"},{"name":"IS_GRAY","type":"boolean"}]}],[{"passes":[{"program":"../effect/paint|sprite-vs:vert|sprite-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"alphaThreshold":{"type":13,"value":[0.5]}}}]}]]],0,0,[],[],[]],[[{"name":"default_sprite_splash","rect":{"x":0,"y":0,"width":2,"height":2},"offset":{"x":0,"y":0},"originalSize":{"width":2,"height":2},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-1,-1,0,1,-1,0,-1,1,0,1,1,0],"indexes":[0,1,2,2,1,3],"uv":[0,2,2,2,0,0,2,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-1,"y":-1,"z":0},"maxPos":{"x":1,"y":1,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[1],0,[0],[2],[7]],[[{"name":"default_sprite_splash","rect":{"x":0,"y":0,"width":2,"height":2},"offset":{"x":0,"y":0},"originalSize":{"width":2,"height":2},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-1,-1,0,1,-1,0,-1,1,0,1,1,0],"indexes":[0,1,2,2,1,3],"uv":[0,2,2,2,0,0,2,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-1,"y":-1,"z":0},"maxPos":{"x":1,"y":1,"z":0}},"packable":false,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[1],0,[0],[2],[8]],[[{"name":"pen","rect":{"x":1,"y":6,"width":251,"height":240},"offset":{"x":-1.5,"y":2},"originalSize":{"width":256,"height":256},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-125.5,-120,0,125.5,-120,0,-125.5,120,0,125.5,120,0],"indexes":[0,1,2,2,1,3],"uv":[1,250,252,250,1,10,252,10],"nuv":[0.00390625,0.0390625,0.984375,0.0390625,0.00390625,0.9765625,0.984375,0.9765625],"minPos":{"x":-125.5,"y":-120,"z":0},"maxPos":{"x":125.5,"y":120,"z":0}},"packable":false,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[1],0,[0],[2],[9]]]]
